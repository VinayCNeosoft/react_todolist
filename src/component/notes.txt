<form>
            <div class="container">
                <center>
                <div className="row  ">
                    <div class="col-sm-6">
                        <input type="text" class="form-control" placeholder="First name"/>
                    </div>
                    <div class="col-sm-6">
                        <input type="text" class="form-control" placeholder="Last name"/>
                    </div>
                </div><br/>
                <div className="row">
                    <div class="col-sm-6">
                        <input type="text" class="form-control" placeholder="Username"/>
                    </div>
                </div><br/>
                <div className="row">
                    <div class="col-sm-6">
                        <input type="email" class="form-control" placeholder="Email"/>
                    </div>
                </div><br/>
                <div className="row">
                    <div class="col-sm-6">
                        <input type="password" class="form-control" placeholder="Password"/>
                    </div>
                    <div class="col-sm-6">
                        <input type="password" class="form-control" placeholder="Confirm Passwrd"/>
                    </div>
                </div><br/>
                <div className="row">
                    <div className="col-sm-12">
                    <input type="button" value="Submit" className="btn btn-primary"></input>
                    </div>
                </div>
                </center>
            </div>
          </form>



          import React, { Component } from 'react'

export class Todo extends Component {
    constructor(props) {
    super(props);

    this.state = {
      message: "",
      items: [],
      description:"",
      desc_items:[]

    }
  }
  handleLogout = () => {
    localStorage.clear();
    this.props.history.push("/");
  };
  updateMessage(event) {
    this.setState({
      message: event.target.value,
    });
  }
  updateBody(event) {
    this.setState({
      description: event.target.value,
    });
  }

  click(event) {
    event.preventDefault()
    var items = this.state.items;
    items.push(this.state.message);
    var desc_items = this.state.desc_items;
    desc_items.push(this.state.description)
    this.setState({
      items: items,
      message: "",
      desc_items: desc_items,
      description: ""
    });
    console.log(desc_items)
  }

  itemChange(i, event) {
    var items = this.state.items;
    var titlex = prompt("Enter updated title")
    items[i]= titlex

    var desc_items = this.state.desc_items;
    var descript = prompt("Enter updated description")
    desc_items[i]= descript
    this.setState({
      items: items,
      desc_items: desc_items
    });
  }
  itemDelete(i) {
    var items = this.state.items;
    items.splice(i, 1);
    var desc_items = this.state.desc_items;
    desc_items.splice(i, 1);
    this.setState({
      items: items,
      desc_items: desc_items
    });

  }

  renderRows() {
    var context = this;
    return  this.state.items.map(function(o, i) {
              return (
                <tr key={"item-" + i}>
                  <td><p id="text" value={o} onChange={context.itemChange.bind(context, i)} ></p></td>
                  <td><p id="prio" name="textarea" value={context.state.desc_items[i]} onChange={context.itemChange.bind(context, i)} /><br/></td>
                  <td><button className="btn btn-success" onClick={context.itemChange.bind(context, i)} > âœ“ </button></td>
                  <td><button className="btn btn-danger" onClick={context.itemDelete.bind(context, i)} > X </button></td>
                </tr>
              );
            });
  }

  render() 
  {
    return (
      <div>
        <h1 className="display-1">Todo List</h1>
        <hr/>
        <div className="container">
        <div className="task">
          <form className="form-group row">
            <div className="col-7">
                <input type="text" className="form-control" placeholder="Task Name" value={this.state.message} onChange={this.updateMessage.bind(this)}/>
                </div>
                <div className="col">
                <input type="number" className="form-control" placeholder="Priority" value={this.state.description}  onChange={this.updateBody.bind(this)}/>
                </div>
                <div className="form-row">
                <div className="col">
                <button className="btn btn_add" onClick={this.click.bind(this)}>Sign in</button>
                </div>
                </div>
            </form>

        </div>
        </div>
        <center>
             <div className="table-responsive">
              <table className="table">
                <thead>
                  <tr>
                    <th>Task</th>
                    <th>Priority</th>
                    <th colSpan="2">Action</th>
                  </tr>
                </thead>
                <tbody>
                  {this.renderRows()}
                </tbody>
              </table>
          </div>
          </center>
    </div>
    )}
}

export default Todo





















import React from 'react'
import { Component } from 'react';
import axios from 'axios';
import {BrowserRouter as Router, Link} from 'react-router-dom'

class ToDoo extends Component {
    constructor() {
      super();
  
      this.state = {
        todos:[],
        currentTodo: "",
        priority:'',
        isCompleted:false
        /* todos: [
          {
            todo: "bake a cake",
            priority:3,
            isCompleted: true
          },
          {
            todo: "go for a walk",
            priority:2,
            isCompleted: false
          },
          {
            todo: "Complete assign Work",
            priority:5,
            isCompleted: false
          }
        ] */
      };
    }
    mainCall=async()=>{
        try{
            const URL = "http://localhost:3002/todos"
            const res = await axios.get(URL)
            this.setState({todos:res.data})
            }
            catch(err){
                console.log(err)
            }
    }
    componentDidMount=async()=>{
        this.mainCall()
    }
    createNewTodo=async(event)=>{
      try{
        event.preventDefault();
        let formData={todo:this.state.currentTodo,priority:this.state.priority,isCompleted:this.state.isCompleted}
        const URL = "http://localhost:3002/todos"
        const res = await axios.post(URL,formData)
        this.setState({todos:res.data});
        this.mainCall()	
      }
      catch(err){
          console.log(err)
      }
      alert("Todo Added")
      document.getElementById('myForm').reset();
     }
    /* createNewTodo(currentTodo,priority) {
      let todosArray = [...this.state.todos];
      todosArray.push({
        todo: currentTodo,
        priority:priority,
        isCompleted: false
      });
      this.setState({ todos: todosArray });
    } */
    handler=(event)=>{
      const {name,value}=event.target;
      this.setState({[name]:value})
    }
    updateTask(event) {
        this.setState({
          currentTodo: event.target.value,
        });
      }
      updatePriority(event) {
        this.setState({
          priority: event.target.value,
        });
      }
    
    completeTodo(index) {
      let todosArray = [...this.state.todos];
      todosArray[index].isCompleted = !todosArray[index].isCompleted;
      this.setState({ todos: todosArray });
    }
  
    deleteTodo(index) {
      let todosArray = [...this.state.todos];
      todosArray.splice(index, 1);
      this.setState({ todos: todosArray });
    }
    handleLogout = () => {
        //localStorage.setItem("status",null);
        localStorage.clear();
        this.props.history.push("/");
    };
  
    render() {
      return (
        <>
        <Router>
        <nav className="navbar navbar-expand-lg navbar-dark bg-primary">
                    <Link className="navbar-brand mb-0 h1" to="/">
                        <img src="images/todo.png" width="40" height="40" className="d-inline-block align-top" alt=""/></Link>
                    <button className="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span className="navbar-toggler-icon"></span>
                    </button>
                    <div className="collapse navbar-collapse " id="navbarSupportedContent">
                        <ul className="navbar-nav mr-auto">
                        <li className="nav-item">
                            <Link className="nav-link" to="/user">Home</Link>
                        </li>
                        <li className="nav-item">
                            <Link className="nav-link" to="/todo">Todo</Link>
                        </li>
                        <li className="nav-item">
                            <Link className="nav-link" onClick={this.handleLogout}>Log Out</Link>
                        </li>
                        </ul>
                    </div>
            </nav>
        </Router>
        <div className="container">
        <form onSubmit={this.createNewTodo.bind.this} id="myForm">
        <div className="row">
            <div className="col-7">
                <input className="todo-input" name="currentTodo" type="text" value={this.state.currentTodo} onChange={this.handler.bind(this)} placeholder="Add Task"/>
            </div>
          
            <div className="col-3">
                <input className="todo-input" name="priority" type="number" value={this.state.priority} onChange={this.handler.bind(this)} placeholder="Priority"/>
            </div>

            <div className="col-2">
                <button type="submit" className="btn btn-success">Add</button></div>
            </div>
        </form>
        </div>
        {/* {this.state.todos.length > 0 && `${this.state.todos.length} items`} */}
        <div className="container">
            <center>
                <div className="table-responsive">
                    <table className="table">
                        <thead>
                            <tr>
                                <th>Task</th>
                                <th>Priority</th>
                                <th colSpan="2">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                        {this.state.todos.map((todo, index) => (
                            <tr key={index}>
                                <td key={index} className={todo.isCompleted ? "done" : ""}>{todo.todo}</td>
                                <td className={todo.isCompleted ? "done" : ""}>{todo.priority}</td>
                                <td className="checkbox" onClick={() => this.completeTodo(index)}><span>&#x2714;</span>
                                {todo.isCompleted }
                                </td>
                                <td key={todo} className="delete" onClick={() => this.deleteTodo(index)}>&#128465;</td>
                            </tr>
                        ))}
                        </tbody>
                    </table>
                </div>
            </center>
        </div>
        </>
      );
      
    }
  }
  export default ToDoo;